USE DATABASE PATIENT_DB;
USE SCHEMA PATIENT_DB.PUBLIC;

--create patient and encounter reason nodes with node id sequence
--NOTE MUST BE RUN ALL AT ONCE SO SEQUINCE CONTINUES WITHOUT OVERLAP
CREATE OR REPLACE SEQUENCE node_id START = 0 INCREMENT = 1;

CREATE OR REPLACE TABLE ENC_REASON_NODE_MAPPING (NODEID, REASONCODE, REASONDESCRIPTION) AS
SELECT node_id.nextval, REASONCODE, REASONDESCRIPTION
FROM ENCOUNTER_REASONS;
SELECT * FROM ENC_REASON_NODE_MAPPING;

CREATE OR REPLACE TABLE PATIENT_NODE_MAPPING (NODEID, ID) AS
SELECT node_id.nextval, ID
FROM PATIENTS;
SELECT * FROM PATIENT_NODE_MAPPING;


CREATE OR REPLACE VIEW NODES(nodeId) AS
    SELECT NODEID FROM PATIENT_NODE_MAPPING
    UNION
    SELECT NODEID FROM ENC_REASON_NODE_MAPPING;
SELECT * FROM NODES;


-- Create Encopunter Realtionships
CREATE OR REPLACE VIEW RELATIONSHIPS(sourceNodeId, targetNodeId) AS
    SELECT 
        PATIENT_NODE_MAPPING.NODEID AS sourceNodeId, 
        ENC_REASON_NODE_MAPPING.NODEID AS targetNodeId
    FROM ENCOUNTERS
    INNER JOIN PATIENT_NODE_MAPPING
        ON ENCOUNTERS.PATIENT = PATIENT_NODE_MAPPING.ID
    INNER JOIN ENC_REASON_NODE_MAPPING
        ON ENCOUNTERS.REASONCODE = ENC_REASON_NODE_MAPPING.REASONCODE
    WHERE ENCOUNTERS.REASONCODE IS NOT NULL;
SELECT * FROM RELATIONSHIPS;
