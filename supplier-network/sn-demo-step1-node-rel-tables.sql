USE DATABASE FREIGHT_NETWORK;
USE SCHEMA FREIGHT_NETWORK.PUBLIC;

-- create aggregate transports
CREATE OR REPLACE TABLE AGG_TRANSPORTS AS
SELECT ORIGIN_AIRPORT_ID,
       DEST_AIRPORT_ID,
       -- AVG(PLANNED_MINUTES) AS AVG_PLANNED_MINUTES,
       AVG(EFFECTIVE_MINUTES) AS AVG_EFFECTIVE_MINUTES,
       COUNT(*) AS FLIGHT_COUNT
FROM TRANSPORTS
GROUP BY ORIGIN_AIRPORT_ID, DEST_AIRPORT_ID;
SELECT * FROM AGG_TRANSPORTS;

-- create node mapping
CREATE OR REPLACE SEQUENCE node_id START = 0 INCREMENT = 1;

CREATE OR REPLACE TABLE NODE_MAPPING (NODEID, AIRPORT_ID) AS
SELECT node_id.nextval, ID
FROM AIRPORTS;
SELECT * FROM NODE_MAPPING;


-- final node view to use with Neo4j
CREATE OR REPLACE VIEW NODES(nodeId) AS
SELECT NODEID FROM NODE_MAPPING;
SELECT * FROM NODES;


-- relationshiup table
CREATE OR REPLACE VIEW RELATIONSHIPS(sourceNodeId, targetNodeId, AVG_EFFECTIVE_MINUTES, FLIGHT_COUNT) AS
SELECT
    src_nodes.NODEID AS sourceNodeId,
    tgt_nodes.NODEID AS targetNodeId,
    TO_DOUBLE(AGG_TRANSPORTS.AVG_EFFECTIVE_MINUTES),
    TO_DOUBLE(AGG_TRANSPORTS.FLIGHT_COUNT)
FROM AGG_TRANSPORTS
         INNER JOIN NODE_MAPPING AS src_nodes
                    ON AGG_TRANSPORTS.ORIGIN_AIRPORT_ID = src_nodes.AIRPORT_ID
         INNER JOIN NODE_MAPPING  AS tgt_nodes
                    ON AGG_TRANSPORTS.DEST_AIRPORT_ID = tgt_nodes.AIRPORT_ID;
SELECT * FROM RELATIONSHIPS;


-- count verify - these should be equal
SELECT COUNT(*) FROM RELATIONSHIPS;
SELECT COUNT(*) FROM AGG_TRANSPORTS;